
const eventEmitter = require('events');

module.exports = class Sender extends eventEmitter {
    constructor(){
        super();
    }

    sendto(){
        return new Promise((resolved,rejected)=>{
        let option = {name:"amit"};
        let gateways = gateway.bind(this,option);
        gateways(option)
        .then((option)=>{
           // this.emit("success",option);
            return resolved(option);
        })
        .catch((option)=>{
            this.emit("failure",option);
            return Promise.reject(option);
        })
    })
}
}

function gateway(option){
    return new Promise((resolved,rejected)=>{
            frame.call(this,option)
            .then(frame2)
            .then((option)=>{
             
                return resolved(option);
            })
            .catch((option)=>{
                return rejected(option);
            })
    });
}

function frame(option){
    return new Promise((resolved,rejected)=>{
        this.emit('sent',option);
        return resolved(option);
    });
}

function frame2(option){
    return new Promise((resolved,rejected)=>{
        this.emit('sent',option);
        return resolved(option);
    });
}
