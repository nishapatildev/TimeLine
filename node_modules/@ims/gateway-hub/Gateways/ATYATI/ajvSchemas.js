const generateOtpSchema = {
  type: "object",
  title: "OTP GENERATION",
  properties: {
    gatewayUrl: { type: "string", minLength: 1, pattern: "https?" },
    gatewayTimeout: { type: "number" },
    PIN : { type: "string" },
    tid: { type: "string" },
    channel: { type: "string", minLength: 1 },
    uid: { type: "string", minLength: 12},
    cbsTerminalId: { type: "string", minLength: 1 },
    consent: { type: "string", minLength: 1 },
    caTid: { type: "string", minLength: 1 },
    agentName: { type: "string" },
    agentAddress: { type: "string" },
    PIN : { type: "string" },
    agentCity: { type: "string", minLength: 1 },
    agentState: { type: "string", minLength: 2, maxLength: 2 },
    bankCode: { type: "string", minLength: 3, maxLength: 3 },
    mcc: { type: "string", minLength: 4, maxLength: 4 },
    posCode: { type: "string", minLength: 2, maxLength: 2 },
    posEntryMode: { type: "string", minLength: 3, maxLength: 3 },
    gatewayCaCertificate: { type: "string" },
    key: { type: "string" },
    cert: { type: "string" },
     txn : {type: "string", minLength:1}
  },
  required: [
    "gatewayUrl",
    "gatewayTimeout",
    "tid",
    "channel",
    "uid",
    "cbsTerminalId",
    "consent",
    "caTid",
    "agentName",
    "bankCode",
    "mcc",
    "posCode",
    "posEntryMode",
    "gatewayCaCertificate",
    "key",
    "cert",
     "txn"
  

  ],
};

const eKYC2_5Schema = {
  type: "object",
  title: "eKYC2_5",
  properties: {
    transactionInfo: {
      type: "object",
      properties: {
        agentName: {
          type: "string",
          minLength: 1,
        },
        agentAddress: {
          type: "string",
          
        },
        agentCity: {
          type: "string",
          minLength: 1,
        },
        agentState: {
          type: "string",
          minLength: 2,
          maxLength: 2,
        },
        bankCode: {
          type: "string",
          minLength: 3,
          maxLength: 3,
        },
        mcc: {
          type: "string",
          minLength: 4,
          maxLength: 4,
        },
        posCode: {
          type: "string",
          minLength: 2,
          maxLength: 2,
        },
        posEntryMode: {
          type: "string",
          minLength: 3,
          maxLength: 3,
        },
        cbsTerminalId: {
          type: "string",
        },
        pfr: {
          type: "string",
          minLength: 1,
          maxLength: 1,
        },
      },
      required: [
        "agentName",
        "agentAddress",
        "agentCity",
        "agentState",
        "bankCode",
        "mcc",
        "posCode",
        "posEntryMode",
       
        "cbsTerminalId",
        "pfr",
      ],
    },

    rdInfo: {
      type: "object",
      properties: {
        uses: {
          type: "object",
          properties: {
            pi: {
              type: "string",
              minLength: 1,
              maxLength: 1,
              enum: ["Y","N","y", "n"],
            },
            pa: {
              type: "string",
              minLength: 1,
              maxLength: 1,
              enum: ["Y","N","y", "n"],
            },
            pfa: {
              type: "string",
              minLength: 1,
              maxLength: 1,
              enum: ["Y","N","y", "n"],
            },
            bio: {
              type: "string",
              minLength: 1,
              maxLength: 1,
              enum: ["Y", "N","y", "n"],
            },
            bt: {
              type: ["string","null"],
              // minLength: 3,
              // maxLength: 7,
              // enum: ["FMR", "FIR", "FMR,FIR"],
            },
            pin: {
              type: "string",
              minLength: 1,
              maxLength: 1,
              enum: ["Y", "N","y", "n"],
            },
            otp: {
              type: ["string" ,"null"],
              // minLength: 1,
              // maxLength: 1,
              // enum: ["Y", "N","y", "n"],
            },
          },
          required: [
	      "pi", 
	      "pa", 
              "pfa", 
              "bio", 
              "bt", 
              "pin", 
              "otp"],
        },
        meta: {
          type: "object",
          properties: {
            //udc: {
            //type: "string",
            //minLength: 1,
            //},
            dpId: {
              type: "string",
             // minLength: 1,
            },
            rdsId: {
              type: "string",
             // minLength: 1,
            },
            rdsVer: {
              type: "string",
             // minLength: 1,
            },
            dc: {
              type: "string",
            //  minLength: 1,
            },
            mi: {
              type: "string",
             // minLength: 1,
            },
            mc: {
              type: "string",
             // minLength: 1,
            },
            error: {
              type: "string",
            },
          },
          required: [
            //"udc",
            "dpId",
            "rdsId",
            "rdsVer",
            "dc",
            "mi",
            "mc",
            "error",
          ],
        },
        skey: {
          type: "object",
          properties: {
            ci: {
              type: "string",
              minLength: 1,
            },
            encodedSk: {
              type: "string",
              minLength: 1,
            },
          },
          required: ["ci", "encodedSk"],
	 },
	uid:{type: "string",maxLength :32},
        txn :{type: ["string","null"]},
	communicationId: {type: "string"},
	data: {
          type: "object",
          properties: {
            type: {
              type: "string",
              minLength: 1,
              maxLength: 1,
              enum: ["X", "P"],
            },
            encodedValue: {
              type: "string",
              minLength: 1,
            },
          },
          required: ["type", "encodedValue"],
        },
        additional_info: {
          type: "object",
          properties: {
            srNo: {
              type: "string",
            },
            deviceType: {
              type: "string",
            },
            supportUpto: {
              type: "string",
            },
            deviceId : {
              type: "string",
            }
          },
          required: ["srNo", "deviceType", "supportUpto"],
        },
        encodedHmac: {
          type: "string",
          minLength: 1,
        },
        rc: {
          type: "string",
          minLength: 1,
          maxLength: 1,
          enum: ["Y", "N", "y", "n"],
        },
        ra: {
          type: "string",
          minLength: 1,
          maxLength: 1,
        },
        fType: {
          type: "number",
          minimum: 0,
          maximum: 2,

        },
        iCount: {
          type: "number",
        },
        pCount: {
          type: "number",
        },
        errCode: {
          type: "string",
        },
        errInfo: {
          type: "string",
        },
        fCount: {
          type: "number",
        },
        ts: {
          type: "string",
        },
        nmPoints: {
          type: "number",
        },
        qScore: {
          type: "number",
        },
        lot: {
          type: "string",
         
        },
        lov: {
          type: "string",
         
        },
      },
      required: [
        "uses",
        "meta",
        "skey",
	      "uid",
        "data",
        "additional_info",
        "encodedHmac",
        "rc",
        "ra",
        "fType",
        "iCount",
        "pCount",
        "errCode",
        "errInfo",
        "fCount",
        "ts",
        "nmPoints",
        "qScore",
        "lot",
        "lov",
      ],
    },
    gatewayUrl: { type: "string", minLength: 1, pattern: "https?" },
    gatewayTimeout: { type: "number" },
    gatewayCaCertificate: { type: "string" },
    key: { type: "string" },
    cert: { type: "string" },
  },
  required: ["transactionInfo", "rdInfo", "gatewayUrl", "gatewayTimeout"],
};

module.exports = {
  generateOtpSchema,
  eKYC2_5Schema,
};
