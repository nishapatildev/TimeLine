const lib = require('../../Lib/gatewayModule');
const TransXpedia = require('../../Utils/transXpedia');
const EventEmitter = require('events');
const schema = require('./ajvSchemas');
const validateJsonSchema = require('../../Utils/utils').validateJsonSchema;

module.exports = class CBI extends EventEmitter {
    constructor(option){
        super();
        this.debugFlag = option.debugFlag == 1 ? 1 : 0;
    }

    async acctAndCifCreation(option){
            const transXpedia = new TransXpedia(option);
            transXpedia.clientData.debugFlag = this.debugFlag;
            transXpedia.schema = schema.ACCTandCIFCreationSchema;
            await validateJsonSchema(transXpedia);
            return await lib.cbi.ACCTandCIFCreation.call(this,transXpedia);
    }

    async signUpload(option){
            const transXpedia = new TransXpedia(option);
            transXpedia.clientData.debugFlag = this.debugFlag;
            transXpedia.schema = schema.SIGNUploadSchema;
            await validateJsonSchema(transXpedia);
            return await lib.cbi.SIGNUpload.call(this,transXpedia);
    }

    
}

