const Ajv               = require("ajv").default;
const errModule         = require('./error');

function validateJsonSchema(transXpedia){
    return new Promise((resolved,rejected)=>{
    try{
            const ajv = new Ajv({allErrors: transXpedia.clientData.debugFlag ? true : false});
            const validate = ajv.compile(transXpedia.schema);
            const valid = validate(transXpedia.clientData);

            if(valid){
                    return resolved(transXpedia);
            }
            else{
                    transXpedia.errorData.systemErr      = null;
                    transXpedia.errorData.serverError    = errModule.E_CLIENT_REQUEST;
                    transXpedia.errorData.errDescription = `INVALID OPTION PASSED` +
                    ` [FUNCTION : validateJsonSchema] INVALID FIELD :[${JSON.stringify(validate.errors)}]`;
                    return rejected(transXpedia.errorData);
            }
    }catch(e){
            transXpedia.SERVER_MODULE  = __dirname + ':' + "validateJsonSchema";
            transXpedia.errorData.systemErr      = e;
            transXpedia.errorData.serverError    = errModule.E_VALIDATE_SCHEMA;
            transXpedia.errorData.errDescription = `NOT ABLE TO DO JSON SCHEMA VALIDATION` +
                    ` [FUNCTION : validateJsonSchema] `;
            return rejected(transXpedia.errorData);
    }
    });
}

module.exports = {
    validateJsonSchema,
}
