/* *************************************************************************** */  
const errModule 			= require('../../../Utils/error');
const xmlParsing            = require('../../../Utils/xmlParsing')
const utils                 = require('../ATYATI/utils')
/* *************************************************************************** */  

/* *************************************************************************** */  
module.exports.frameMessage =  function frameMessage (transXpedia) {
	return new Promise ((resolved, rejected) => {
		try {
			let request = '';

            request += ('00000000000000000' + transXpedia.clientData.customerId).slice(-17);
            request += ('00000000000000000' + transXpedia.clientData.accountNo).slice(-17);
            request += '1';
            request += ('00000000' + transXpedia.clientData.encodedSignature.length).slice(-8);
            request += transXpedia.clientData.encodedSignature;
         
            request = ('00000000' + request.length).slice(-8) + request;
                        
			transXpedia.requestBuffer = Buffer.from(request);
			this.emit('tocbs',request);
			return resolved(transXpedia);
		} catch (e) {
			transXpedia.errorData.systemErr   	= e;
			transXpedia.errorData.serverError 	= errModule.E_GATEWAY_MESSAGE_FRAMING;
			return rejected(transXpedia);
		}
	});
};



module.exports.extractMessage = function extractMessage (transXpedia) {
	return new Promise ((resolved, rejected) => {
		try {
			this.emit('fromgateway', transXpedia.responseBuffer);
		
            transXpedia.responseData.gatewayResponseCode	= transXpedia.responseBuffer ? transXpedia.responseBuffer.slice(0,4)  : '2000';
			transXpedia.responseData.gatewayResponseMsg 	= transXpedia.responseBuffer ? transXpedia.responseBuffer.slice(38) : 'Invalid Response From CBS/Gateway';

            if(transXpedia.responseData.gatewayResponseCode == '0000') {
                transXpedia.responseData.gatewayResponseCode    = '00';
                transXpedia.responseData.cbsStatusMsg 		    = 'CIF AND ACCOUNT CREATED - SIGN UPLOADED';
				transXpedia.responseData.customerId				= transXpedia.clientData.customerId;
				transXpedia.responseData.accountNo				= transXpedia.clientData.accountNo;
            }else{
                transXpedia.responseData.cbsStatusMsg 		    = 'CIF AND ACCOUNT CREATED - SIGN UPLOAD FAILED';
            }
                  
            return resolved(transXpedia);

		} catch (e) {
			transXpedia.errorData.systemErr   	= e;
			transXpedia.errorData.serverError 	= errModule.E_GATEWAY_MESSAGE_DE_FRAMING;
			return rejected(transXpedia);
		}
	});
};

/* *************************************************************************** */  
