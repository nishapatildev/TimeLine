/* *************************************************************************** */
const errModule = require("../../../Utils/error");
const { getLikeDDMMMYYYYbHHMMSS } = require("../../../Utils/timestamp");
/* *************************************************************************** */

/* *************************************************************************** */
module.exports.frameMessage = function frameMessage(transXpedia) {
  return new Promise((resolved, rejected) => {
    try {
      let request = {
        requestNumber: transXpedia.clientData.rrn,
        applicationRefNo: transXpedia.clientData.arn,
        requestTime: getLikeDDMMMYYYYbHHMMSS(),
        sourceName: "INTG",
        documentType: "BKYC",
        documentName: "BKYC",
        base64encodedDocument: transXpedia.clientData.base64EncodedDocument,
        filler1: `${transXpedia.clientData.advReferenceNumber}x${transXpedia.clientData.rrn}`,
        filler2: `${transXpedia.clientData.consentDate}${
          transXpedia.clientData.consentFlag
        }${transXpedia.clientData.consentLanguage
          ?.slice(0, 6)
          ?.toUpperCase()}x${transXpedia.clientData.consentVersion?.replace(
          /\./g,
          "x"
        )}`,
        filler3: "",
        filler4: "",
        filler5: "",
      };
      transXpedia.requestData = request;
      transXpedia.requestBuffer = JSON.stringify(request);
      this.emit("togateway", transXpedia.requestBuffer || '');
      return resolved(transXpedia);
    } catch (e) {
      transXpedia.errorData.systemErr = e;
      transXpedia.errorData.serverError = errModule.E_GATEWAY_MESSAGE_FRAMING;
      return rejected(transXpedia);
    }
  });
};

module.exports.extractMessage = function extractMessage(transXpedia) {
  return new Promise((resolved, rejected) => {
    try {
      this.emit("fromgateway", transXpedia.responseBuffer);
      let responseBuffer = JSON.parse(transXpedia.responseBuffer);
      transXpedia.responseData.gatewayResponse = responseBuffer;
      if (responseBuffer.errorCode == "0000") {
        transXpedia.responseData.gatewayResponseCode = "0000";
        transXpedia.responseData.gatewayResponseMsg = "success";
      } else {
        transXpedia.responseData.gatewayResponseCode = responseBuffer.errorCode;
        transXpedia.responseData.gatewayResponseMsg = responseBuffer.errorMessage;
      }
      return resolved(transXpedia);
    } catch (e) {
      transXpedia.errorData.systemErr = e;
      transXpedia.errorData.serverError =
        errModule.E_GATEWAY_MESSAGE_DE_FRAMING;
      return rejected(transXpedia);
    }
  });
};

/* *************************************************************************** */
